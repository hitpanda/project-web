{"version":3,"sources":["components/TaskForm.js","components/Search.js","components/Sort.js","components/Control.js","components/ListItem.js","components/TaskList.js","Main.js","index.js"],"names":["TaskForm","props","closeForm","handleChange","event","target","name","value","setState","handleClearForm","id","status","handleSubmit","preventDefault","submit","state","this","taskEditing","nextProps","className","onClick","onSubmit","type","onChange","required","React","Component","Search","onSearch","keyword","placeholder","Sort","onSortClick","sortName","sortValue","by","role","Control","ListItem","onUpdateStatus","task","onDelete","onUpdate","index","TaskList","onFilter","filterName","filterStatus","taskElement","tasks","map","Main","toggleForm","isDisplayForm","data","generateId","push","findIndex","localStorage","setItem","JSON","stringify","result","forEach","_","newTasks","splice","parseInt","filter","toLowerCase","sort","getItem","parse","Math","floor","random","toString","substring","s4","indexOf","a","b","taskFormElement","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.919e0529.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass TaskForm extends React.Component {\r\n   constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n         id: '',\r\n         name: '',\r\n         status: true,\r\n      }\r\n   }\r\n   \r\n   UNSAFE_componentWillMount() {\r\n      if (this.props.taskEditing) {\r\n         this.setState({\r\n            id: this.props.taskEditing.id,\r\n            name: this.props.taskEditing.name,\r\n            status: this.props.taskEditing.status,\r\n         })\r\n      }\r\n   }\r\n\r\n   UNSAFE_componentWillReceiveProps(nextProps) {\r\n      if (nextProps && nextProps.taskEditing) {\r\n         this.setState({\r\n            id: nextProps.taskEditing.id,\r\n            name: nextProps.taskEditing.name,\r\n            status: nextProps.taskEditing.status,\r\n         })\r\n      } else if (!nextProps.taskEditing) {\r\n         this.handleClearForm()\r\n      }\r\n   }\r\n\r\n   closeForm = () => {\r\n      this.props.closeForm()\r\n   }\r\n\r\n   handleChange = (event) => {\r\n      var target = event.target\r\n      var name = target.name\r\n      var value = target.value\r\n      if (name === 'status') {\r\n         value = target.value === 'true' ? true : false\r\n      }\r\n      this.setState({\r\n         [name]: value\r\n      })\r\n   }\r\n\r\n   handleClearForm = () => {\r\n      this.setState({\r\n         id: '',\r\n         name: '',\r\n         status: true,\r\n      })\r\n   }\r\n\r\n   handleSubmit = (event) => {\r\n      event.preventDefault()\r\n      this.props.submit(this.state)\r\n      this.handleClearForm()\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"panel\">\r\n            <div className=\"panel-heading\">\r\n               <h4>{this.state.id !== '' ? 'Sửa Công Việc' : 'Thêm Công Việc'}</h4>\r\n               <i\r\n                  className=\"far fa-times-circle\"\r\n                  onClick={this.closeForm}\r\n               ></i>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n               <form onSubmit={this.handleSubmit}>\r\n                  <div className=\"form-group\">\r\n                     <label>Tên:</label>\r\n                     <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        className=\"form-control\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                     />\r\n                  </div>\r\n                  <br/>\r\n                  <div className=\"form-group\">\r\n                     <label>Trạng Thái:</label>\r\n                     <select\r\n                        className=\"form-control\"\r\n                        name=\"status\"\r\n                        value={this.state.status}\r\n                        onChange={this.handleChange}\r\n                     >\r\n                        <option value={true}>Kích hoạt</option>\r\n                        <option value={false}>Ẩn</option>\r\n                     </select>\r\n                  </div>\r\n                  <br/>\r\n                  <div className=\"text-center\">\r\n                     <button type=\"submit\" className=\"btn btn-success\">\r\n                        <i className=\"fas fa-plus\"></i>&nbsp;\r\n                        Lưu Lại\r\n                     </button>&nbsp;\r\n                     <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger\"\r\n                        onClick={this.handleClearForm}\r\n                     >\r\n                        <i className=\"fas fa-times\"></i>&nbsp;\r\n                        Hủy Bỏ\r\n                     </button>\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default TaskForm","import React from 'react'\r\n\r\nclass Search extends React.Component {\r\n   constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n         keyword: '',\r\n      }\r\n   }\r\n\r\n   onChange = (event) => {\r\n      var target = event.target\r\n      var name = target.name\r\n      var value = target.value\r\n      this.setState({\r\n         [name]: value\r\n      })\r\n   }\r\n\r\n   onSearch = () => {\r\n      this.props.onSearch(this.state.keyword)\r\n   }\r\n\r\n   render() {\r\n      var {keyword} = this.state\r\n\r\n      return (\r\n         <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n            <div className=\"input-group\">\r\n               <input \r\n                  type=\"text\" \r\n                  className=\"form-control\" \r\n                  placeholder=\"Nhập từ khóa\" \r\n                  name=\"keyword\"\r\n                  value={keyword}\r\n                  onChange={this.onChange}\r\n               />\r\n               <button \r\n                  type=\"button\" \r\n                  className=\"btn btn-primary\"\r\n                  onClick={this.onSearch}\r\n               >\r\n                  <i className=\"fas fa-search\"></i>&nbsp;\r\n                  Tìm\r\n               </button>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Search","import React from 'react'\r\n\r\nclass Sort extends React.Component {\r\n   constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n         by: 'name',\r\n         value: 1\r\n      }\r\n   }\r\n\r\n   onSortClick = (sortName, sortValue) => {\r\n      this.setState({\r\n         by: sortName,\r\n         value: sortValue\r\n      }, () => {\r\n         this.props.onSortClick(this.state)\r\n      })\r\n   }\r\n\r\n   render() {\r\n      var {by, value} = this.state\r\n      \r\n      return (\r\n         <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n            <div className=\"dropdown\">\r\n               <button className=\"btn btn-primary dropdown-toggle\" type=\"button\">\r\n                  Sắp xếp\r\n                  <ul className=\"dropdown-menu\">\r\n                     <li onClick={() => this.onSortClick('name', 1)}>\r\n                        <p\r\n                           role=\"button\"\r\n                           className={(by === 'name' && value === 1) ? 'dropdown-item sort_selected' : 'dropdown-item'}\r\n                        >\r\n                           <i className=\"fas fa-sort-alpha-down\"></i>&nbsp;\r\n                           Tên A-Z\r\n                        </p>\r\n                     </li>\r\n                     <li onClick={() => this.onSortClick('name', -1)}>\r\n                        <p\r\n                           role=\"button\"\r\n                           className={(by === 'name' && value === -1) ? 'dropdown-item sort_selected' : 'dropdown-item'}\r\n                        >\r\n                           <i className=\"fas fa-sort-alpha-up\"></i>&nbsp;\r\n                           Tên Z-A\r\n                        </p>\r\n                     </li>\r\n                     <li role=\"separator\" className=\"divider\"></li>\r\n                     <li onClick={() => this.onSortClick('status', 1)}>\r\n                        <p\r\n                           role=\"button\"\r\n                           className={(by === 'status' && value === 1) ? 'dropdown-item sort_selected' : 'dropdown-item'}\r\n                        >Trạng Thái Kích Hoạt</p>\r\n                     </li>\r\n                     <li onClick={() => this.onSortClick('status', -1)}>\r\n                        <p\r\n                           role=\"button\"\r\n                           className={(by === 'status' && value === -1) ? 'dropdown-item sort_selected' : 'dropdown-item'}\r\n                        >Trạng Thái Ẩn</p>\r\n                     </li>\r\n                  </ul>\r\n               </button>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Sort","import React from 'react'\r\nimport Search from './Search'\r\nimport Sort from './Sort'\r\n\r\nclass Control extends React.Component {\r\n   render() {\r\n      return (\r\n         <div className=\"row mt-20\">\r\n            {/* Search */}\r\n            <Search onSearch={this.props.onSearch}/>\r\n            {/* End search */}\r\n\r\n            {/* Sort */}\r\n            <Sort onSortClick={this.props.onSortClick}/>\r\n            {/* End sort */}\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Control","import React from 'react'\r\n\r\nclass ListItem extends React.Component {\r\n   onUpdateStatus = () => {\r\n      this.props.onUpdateStatus(this.props.task.id)\r\n   }\r\n\r\n   onDelete = () => {\r\n      this.props.onDelete(this.props.task.id)\r\n   }\r\n\r\n   onUpdate = () => {\r\n      this.props.onUpdate(this.props.task.id)\r\n   }\r\n\r\n   render() {\r\n      var {task, index} = this.props\r\n\r\n      return (\r\n         <tr>\r\n            <td>{index + 1}</td>\r\n            <td>{task.name}</td>\r\n            <td className=\"text-center\">\r\n               <span\r\n                  className={task.status ? 'label label-success' : 'label label-danger'}\r\n                  onClick={this.onUpdateStatus}\r\n               >\r\n                  {task.status ? 'Kích Hoạt' : 'Ẩn'}\r\n               </span>\r\n            </td>\r\n            <td className=\"text-center\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-warning\"\r\n                  onClick={this.onUpdate}\r\n               >\r\n                  <i className=\"far fa-edit\"></i>&nbsp;\r\n                  Sửa\r\n               </button>&nbsp;\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={this.onDelete}\r\n               >\r\n                  <i className=\"fas fa-trash\"></i>&nbsp;\r\n                  Xóa\r\n               </button>\r\n            </td>\r\n         </tr>\r\n      )\r\n   }\r\n}\r\n\r\nexport default ListItem","import React from 'react'\r\nimport ListItem from './ListItem'\r\n\r\nclass TaskList extends React.Component {\r\n   constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n         filterName: '',\r\n         filterStatus: -1,\r\n      }\r\n   }\r\n\r\n   onChange = (event) => {\r\n      var target = event.target\r\n      var name = target.name\r\n      var value = target.value\r\n      this.props.onFilter(\r\n         name === 'filterName' ? value : this.state.filterName,\r\n         name === 'filterStatus' ? value : this.state.filterStatus\r\n      )\r\n      this.setState({\r\n         [name]: value\r\n      })\r\n   }\r\n\r\n   render() {\r\n      // var {tasks} = this.props \r\n      var tasks = this.props.tasks\r\n      var taskElement = tasks.map((task, index) => {\r\n         return <ListItem\r\n                  key={task.id}\r\n                  index={index}\r\n                  task={task}\r\n                  onUpdateStatus={this.props.onUpdateStatus}\r\n                  onDelete={this.props.onDelete}\r\n                  onUpdate={this.props.onUpdate}\r\n               />\r\n      })\r\n\r\n      return (\r\n         <table className=\"table\">\r\n            <thead>\r\n               <tr>\r\n                  <th>STT</th>\r\n                  <th>Tên</th>\r\n                  <th>Trạng Thái</th>\r\n                  <th>Hành Động</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               <tr>\r\n                  <td></td>\r\n                  <td>\r\n                     <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"filterName\"\r\n                        value={this.state.filterName}\r\n                        onChange={this.onChange}\r\n                     />\r\n                  </td>\r\n                  <td>\r\n                     <select\r\n                        className=\"form-control\"\r\n                        name=\"filterStatus\"\r\n                        value={this.state.filterStatus}\r\n                        onChange={this.onChange}\r\n                     >\r\n                        <option value={-1}>Tất Cả</option>\r\n                        <option value={0}>Ẩn</option>\r\n                        <option value={1}>Kích Hoạt</option>\r\n                     </select>\r\n                  </td>\r\n                  <td></td>\r\n               </tr>\r\n               {/* <ListItem /> */}\r\n               {taskElement}\r\n            </tbody>\r\n         </table>\r\n      )\r\n   }\r\n}\r\n\r\nexport default TaskList","import React from 'react'\r\nimport './Main.css'\r\nimport TaskForm from './components/TaskForm'\r\nimport Control from './components/Control'\r\nimport TaskList from './components/TaskList'\r\nimport _ from 'lodash'\r\n\r\nclass Main extends React.Component {\r\n   constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n         tasks: [],\r\n         isDisplayForm: false,\r\n         taskEditing: null,\r\n         filter: {\r\n            name: '',\r\n            status: -1\r\n         },\r\n         keyword: '',\r\n         sort: {\r\n            by: 'name',\r\n            value: 1\r\n         }\r\n      }\r\n   }\r\n\r\n   UNSAFE_componentWillMount() {\r\n      if (localStorage.getItem('tasks')) {\r\n         var tasks = JSON.parse(localStorage.getItem('tasks'))\r\n         this.setState({\r\n            tasks: tasks\r\n         })\r\n      }\r\n   }\r\n\r\n   s4() {\r\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1)\r\n   }\r\n\r\n   generateId() {\r\n      return this.s4() + this.s4() + '-' + this.s4() + this.s4() + '-' + this.s4() + this.s4() + this.s4() + this.s4() + '-' + this.s4() + this.s4() + this.s4() + this.s4() + '-' + this.s4() + this.s4()\r\n   }\r\n\r\n   // generateData = () => {\r\n   //    var tasks = [\r\n   //       {\r\n   //          id: this.generateId(),\r\n   //          name: 'Học lập trình 1',\r\n   //          status: true,\r\n   //       },\r\n   //       {\r\n   //          id: this.generateId(),\r\n   //          name: 'Học lập trình 2',\r\n   //          status: false,\r\n   //       },\r\n   //       {\r\n   //          id: this.generateId(), \r\n   //          name: 'Học lập trình 3',\r\n   //          status: true,\r\n   //       },\r\n   //    ]\r\n   //    this.setState({\r\n   //       tasks: tasks\r\n   //    })\r\n   //    localStorage.setItem('tasks', JSON.stringify(tasks))\r\n   // }\r\n\r\n   toggleForm = () => {\r\n      if (this.state.taskEditing !== null) {\r\n         this.setState({\r\n            isDisplayForm: true,\r\n            taskEditing: null\r\n         })\r\n      } else {\r\n         this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm,\r\n            taskEditing: null\r\n         })\r\n      }\r\n   }\r\n\r\n   closeForm = () => {\r\n      this.setState({\r\n         isDisplayForm: false,\r\n      })\r\n   }\r\n\r\n   handleSubmit = (data) => {\r\n      // var task = {\r\n      //    id: this.generateId(),\r\n      //    name: data.name,\r\n      //    status: data.status,\r\n      // }\r\n      var {tasks} = this.state\r\n      if (data.id === '') {\r\n         data.id = this.generateId()\r\n         tasks.push(data)\r\n      } else {\r\n         var index = this.findIndex(data.id)\r\n         tasks[index] = data\r\n      }\r\n      this.setState({\r\n         tasks: tasks,\r\n         taskEditing: null,\r\n      })\r\n      localStorage.setItem('tasks', JSON.stringify(tasks))\r\n      this.closeForm()\r\n   }\r\n\r\n   findIndex = (id) => {\r\n      var {tasks} = this.state\r\n      var result = -1\r\n      tasks.forEach((task, index) => {\r\n         if (task.id === id) {\r\n            result = index\r\n         }\r\n      })\r\n      return result\r\n   }\r\n\r\n   onUpdateStatus = (id) => {\r\n      var {tasks} = this.state\r\n      // var index = this.findIndex(id)\r\n      // find by lodash\r\n      var index = _.findIndex(tasks, (task) => {\r\n         return task.id === id\r\n      })\r\n      if (index !== -1) {\r\n         tasks[index].status = !tasks[index].status\r\n         this.setState({\r\n            tasks: tasks\r\n         })\r\n         localStorage.setItem('tasks', JSON.stringify(tasks))\r\n      }\r\n   }\r\n\r\n   onDelete = (id) => {\r\n      var {tasks} = this.state\r\n      var index = this.findIndex(id)\r\n      if (index !== -1) {\r\n         var newTasks = [...tasks]\r\n         newTasks.splice(index, 1)\r\n         this.setState({\r\n            tasks: newTasks\r\n         })\r\n         localStorage.setItem('tasks', JSON.stringify(newTasks))\r\n      }\r\n   }\r\n\r\n   onUpdate = (id) => {\r\n      var {tasks} = this.state\r\n      var index = this.findIndex(id)\r\n      if (index !== -1) {\r\n         this.setState({\r\n            isDisplayForm: true,\r\n            taskEditing: tasks[index],\r\n         })\r\n      }\r\n   }\r\n\r\n   onFilter = (filterName, filterStatus) => {\r\n      filterStatus = parseInt(filterStatus, 10)\r\n      this.setState({\r\n         filter: {\r\n            name: filterName.toLowerCase(),\r\n            status: filterStatus\r\n         }\r\n      })\r\n   }\r\n\r\n   onSearch = (keyword) => {\r\n      this.setState({\r\n         keyword: keyword\r\n      })\r\n   }\r\n\r\n   onSortClick = (data) => {\r\n      if (data) {\r\n         this.setState({\r\n            sort: {\r\n               by: data.by,\r\n               value: data.value\r\n            }\r\n         })\r\n      }\r\n   }\r\n\r\n   render() {\r\n      var {tasks, isDisplayForm, taskEditing, filter, keyword, sort} = this.state // var tasks = this.state.tasks\r\n      \r\n      if (filter) {\r\n         if (filter.name) {\r\n            tasks = tasks.filter((task) => {\r\n               return task.name.toLowerCase().indexOf(filter.name) !== -1\r\n            })\r\n         }\r\n         tasks = tasks.filter((task) => {\r\n            if (filter.status === -1) {\r\n               return task\r\n            } else {\r\n               return task.status === (filter.status === 1 ? true : false)\r\n            }\r\n         })\r\n      }\r\n\r\n      if (keyword) {\r\n         tasks = tasks.filter((task) => {\r\n            return task.name.toLowerCase().indexOf(keyword) !== -1\r\n         })\r\n      }\r\n\r\n      if (sort.by === 'name') {\r\n         tasks.sort((a, b) => {\r\n            if (a.name > b.name) return sort.value\r\n            else if (a.name < b.name) return -sort.value\r\n            else return 0\r\n         })\r\n      } else {\r\n         tasks.sort((a, b) => {\r\n            if (a.status < b.status) return sort.value\r\n            else if (a.status > b.status) return -sort.value\r\n            else return 0\r\n         })\r\n      }\r\n\r\n      var taskFormElement = isDisplayForm\r\n         ? <TaskForm\r\n               closeForm={this.closeForm}\r\n               submit={this.handleSubmit}\r\n               onUpdate={this.onUpdate}\r\n               taskEditing={taskEditing}\r\n            />\r\n         : ''\r\n\r\n      return (\r\n         <div className=\"container mt-20\">\r\n            <div className=\"text-center\">\r\n               <h1>Quản Lý Công Việc</h1>\r\n            </div>\r\n            <hr/>\r\n            <div className=\"row\">\r\n               {/* Form add work */}\r\n               <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n                  {/* <TaskForm /> */}\r\n                  {taskFormElement}\r\n               </div>\r\n               {/* End form add work */}\r\n\r\n               {/* Show */}\r\n               <div\r\n                  className={isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12'}\r\n               >\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-primary\"\r\n                     onClick={this.toggleForm}\r\n                  >\r\n                     <i className=\"fas fa-plus\"></i>&nbsp;\r\n                     Thêm Công Việc\r\n                  </button>&nbsp;\r\n                  {/* <button type=\"button\" className=\"btn btn-success\" onClick={this.generateData}>\r\n                     Generate Data\r\n                  </button> */}\r\n                  <br/>\r\n                  <Control onSearch={this.onSearch} onSortClick={this.onSortClick} />\r\n                  <br/>\r\n                  <div className=\"row\">\r\n                     <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                        <TaskList\r\n                           tasks={tasks}\r\n                           onUpdateStatus={this.onUpdateStatus}\r\n                           onDelete={this.onDelete}\r\n                           onUpdate={this.onUpdate}\r\n                           onFilter={this.onFilter}\r\n                        />   \r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               {/* End show */}\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Main","import ReactDOM from 'react-dom'\r\nimport Main from './Main'\r\n\r\nReactDOM.render(\r\n   <Main />,\r\n   document.getElementById('root')\r\n)"],"sourceRoot":""}